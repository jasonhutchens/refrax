#include <photon.h>

//------------------------------------------------------------------------------
Photon::Photon()
{
    clear();
}

//------------------------------------------------------------------------------
Photon::~Photon()
{
}

//------------------------------------------------------------------------------
void
Photon::clear()
{
    _n = 0;
    _r = 0;
    _g = 0;
    _b = 0;
}

//------------------------------------------------------------------------------
void
Photon::brighten(Uint8 r, Uint8 g, Uint8 b)
{
    _n += 1;
    _r += r;
    _g += g;
    _b += b;
}    

//------------------------------------------------------------------------------
Uint32
Photon::colour(SDL_Surface* surface)
{
    if(_n == 0)
    {
        return SDL_MapRGB(surface->format, 0, 0, 0);
    }

    Uint8 r;
    Uint8 g;
    Uint8 b;

    r = (_r > 255) ? 255 : (Uint8)_r;
    g = (_g > 255) ? 255 : (Uint8)_g;
    b = (_b > 255) ? 255 : (Uint8)_b;

    return SDL_MapRGB(surface->format, r, g, b);
}

//------------------------------------------------------------------------------
bool
Photon::empty()
{
    return _n == 0;
}
